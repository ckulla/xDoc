chapter:Introduction[Introduction]

section[What is Xdoc]

Xdoc is a simple documentation language for software projects. It focuses on,
but is not limited to, Eclipse plugin projects, generating a fully functional
Eclipse help plugin. We support code chunks and also code references to java 
classes in the class path. Error markers in the editor show the developers if
any links to classes are broken.

section[Why Xdoc]

In various projects the documentation is a rather tedious task. Choosing a language
like LaTeX, it is possible to generate neat PDF documents. But as Latex is a rather
complicated language, you have to learn it before you can actually write your 
documentation. In addition LaTeX is optimized for printed documents and does not
feature HTML output. Of course there exists tooling for generating HTML documents, 
the structure of those was simply not what we where looking for.

Another possibility would be to use a language like textile. HTML can be generated 
easily. It is also possible to generate PDF or docbook XML files. It gives the writer
of the documentation much freedom in formatting, like changing font color for 
paragraphs, changing the text alignment or even controlling the output HTML indirectly
by setting span's attributes like id or class. These freedoms can be nice, but for a 
concise documentation languages they are not needed. They can even have a negative 
influence as an inconsistent style in a documentation can distract the reader.

section[Concepts]

So we started to develop a language with several concepts in mind. First: No freedom.
The language is easy and simple. You can not adjust the design of the output in an 
Xdoc file. We think design should be made using CSS and also provide two ready 
to use CSS files, one to adjust the look of code blocks, the other to adjust 
the rest (e.g. headlines, tables or lists). PDF files are generated via LaTeX. 
This way you don't need to layout the documents yourself as LaTeX is a highly 
optimized type setting language. Currently we use Koma Script as document class, 
providing a modern layout for the documents. HTML files are generated directly. 
We also generate a toc.xml and a plugin.xml. This way the project can be exported 
directly as an Eclipse help plugin.

A description of the basic concepts follows.

section[Structure and Formatting]

Xdoc files can contain different top level elements, allowing to split up 
documents over different files. Top level elements can be:

ul[
	item[code[xdoc][document\[title\]]: Defining a document with the given title 
	that can be compiled]
%%	item[code[xdoc][chapter:id\[title\]] a chapter that can be referenced by code[xdoc][chapter-ref\[id\]]
]
